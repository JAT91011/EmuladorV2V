<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbIcono.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CCFDwzzz/B82wBhWJmaWPgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>